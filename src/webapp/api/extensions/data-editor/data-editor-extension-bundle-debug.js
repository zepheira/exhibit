

/* data-editor.js */
if(!window.jQuery){window.jQuery=SimileAjax.jQuery;
}Exhibit.DataEdit=function(){};
Exhibit.DataEdit.EDIT_INJECT_MARKER="exhibitDataEditMarker";
Exhibit.DataEdit.EDIT_DIV="exhibitDataEditBar";
Exhibit.DataEdit.EDIT_BUTTON="exhibitDataEditButton";
Exhibit.DataEdit.EDIT_MESSAGE="exhibitDataEditError";
Exhibit.DataEdit.EDIT_ROLE_LENS="editor";
Exhibit.DataEdit.EDIT_ROLE_ACTIVATE="editorActivateButton";
Exhibit.DataEdit.EDIT_ROLE_EDIT="editorEditButton";
Exhibit.DataEdit.EDIT_ROLE_DELETE="editorDeleteButton";
Exhibit.DataEdit.EDIT_ROLE_CLONE="editorCloneButton";
Exhibit.DataEdit.EDIT_ROLE_CREATE="editorCreateButton";
Exhibit.DataEdit.EDIT_ROLE_SAVE="editorSaveButton";
Exhibit.DataEdit.EDIT_ROLE_STATUS="editorStatus";
Exhibit.DataEdit.CREATE_MODE=1;
Exhibit.DataEdit.UPDATE_MODE=2;
Exhibit.DataEdit.DELETE_MODE=3;
Exhibit.DataEdit._DEBUG_=false;
Exhibit.DataEdit._lock_=false;
Exhibit.DataEdit._editors_=null;
Exhibit.DataEdit._lifeCycleEventHandlers_=[];
Exhibit.DataEdit.activate=function(){var self=this;
if(Exhibit.DataEdit._lock_){if(!Exhibit.DataEdit._invokeEventHandlers("onBeforeActivateClose")){return ;
}database._listeners.fire("onAfterLoadingItems",[]);
Exhibit.DataEdit._setEditLock(false);
Exhibit.DataEdit._invokeEventHandlers("onActivateClose");
return ;
}if(!Exhibit.DataEdit._invokeEventHandlers("onBeforeActivate")){return ;
}Exhibit.DataEdit._setEditLock(true);
Exhibit.DataEdit._editors_={};
var filter=function(idx){return $(this).attr("ex:itemid");
};
$("*").filter(filter).each(function(idx){var id=$(this).attr("ex:itemid");
var filterEdit=function(idx){return $(this).attr("_ex:role")==Exhibit.DataEdit.EDIT_ROLE_EDIT;
};
var l=$("*",this).filter(filterEdit);
if(l.length>0){l.each(function(idx){$(this).css("display","Block");
$(this).click(function(){Exhibit.DataEdit.edit(id);
});
});
var filterDelete=function(idx){return $(this).attr("_ex:role")==Exhibit.DataEdit.EDIT_ROLE_DELETE;
};
$("*",this).filter(filterDelete).each(function(idx){$(this).css("display","Block");
$(this).click(function(){Exhibit.DataEdit.de1ete(id);
});
});
var filterClone=function(idx){return $(this).attr("_ex:role")==Exhibit.DataEdit.EDIT_ROLE_CLONE;
};
$("*",this).filter(filterClone).each(function(idx){$(this).css("display","Block");
$(this).click(function(){Exhibit.DataEdit.clone(id);
});
});
var filterCreate=function(idx){return $(this).attr("_ex:role")==Exhibit.DataEdit.EDIT_ROLE_CREATE;
};
$("*",this).filter(filterCreate).each(function(idx){$(this).css("display","Block");
$(this).click(function(){Exhibit.DataEdit.create(id);
});
});
}else{var xy=$(this).offset();
var w=$(this).outerWidth(true);
var h=$(this).outerHeight(true);
var markerId="__MARKER__"+Exhibit.DataEdit.Editor._escapeString(id);
var overlay='<div id="'+markerId+'" class="'+Exhibit.DataEdit.EDIT_INJECT_MARKER+'" onMouseOver="Exhibit.DataEdit._rollIn_(this)" onMouseOut="Exhibit.DataEdit._rollOut_(this)" style="position:Absolute ; top:'+xy.top+"px ; left:"+xy.left+"px ; width:"+w+"px ; height:"+h+'px ; cursor:Help ; border:2px #dddddd Dotted;"><div onclick="Exhibit.DataEdit.edit(\''+id+'\')" style="width:'+w+"px ; height:"+h+'px ; background:Black; opacity:0.0; filter:alpha(opacity=0); -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0);"></div><div class="__buttonBar__" style="position:Absolute ; top:4px ; right: 2px ; display:None; background:Red ; color:White ; padding:0.25em 0.5em"><span onclick="Exhibit.DataEdit.create(\''+id+'\')" style="text-decoration:Underline ; cursor:Pointer ;">New</span>&nbsp;|&nbsp;<span onclick="Exhibit.DataEdit.clone(\''+id+'\')" style="text-decoration:Underline ; cursor:Pointer ;">Clone</span>&nbsp;|&nbsp;<span onclick="Exhibit.DataEdit.de1ete(\''+id+'\')" style="text-decoration:Underline ; cursor:Pointer ;">Delete</span></div></div>';
$(this).append(overlay);
}});
Exhibit.DataEdit._invokeEventHandlers("onActivate");
};
Exhibit.DataEdit._rollIn_=function(div){$(div).css("border","2px Red Dotted");
$(".__buttonBar__",div).css("display","Block");
};
Exhibit.DataEdit._rollOut_=function(div){$(div).css("border","2px #dddddd Dotted");
$(".__buttonBar__",div).css("display","None");
};
Exhibit.DataEdit.edit=function(itemId){if(!Exhibit.DataEdit._invokeEventHandlers("onBeforeEdit",itemId)){return ;
}var self=this;
var filter=function(idx){return($(this).attr("ex:itemid"));
};
$("*").filter(filter).each(function(idx){var id=$(this).attr("ex:itemid");
var markerId="__MARKER__"+Exhibit.DataEdit.Editor._escapeString(id);
if(id==itemId){var filterEdit=function(idx){return $(this).attr("_ex:role")==Exhibit.DataEdit.EDIT_ROLE_EDIT;
};
$("*",this).filter(filterEdit).css("display","None");
$("#"+markerId,this).remove();
var editor=new Exhibit.DataEdit.Editor(itemId,this);
Exhibit.DataEdit._editors_[itemId]=editor;
editor.apply();
}else{var xy=$(this).offset();
$("#"+markerId,this).css("top",xy.top+"px").css("left",xy.left+"px");
}});
Exhibit.DataEdit._invokeEventHandlers("onEdit",itemId);
};
Exhibit.DataEdit.de1ete=function(itemId){if(!Exhibit.DataEdit._invokeEventHandlers("onBeforeDelete",itemId)){return ;
}if(confirm("Do you really want to delete this item?\nItem: "+itemId)){var item=database._spo[itemId];
for(p in item){database.removeObjects(itemId,p);
}}else{return ;
}database._listeners.fire("onAfterLoadingItems",[]);
Exhibit.DataEdit._setEditLock(false);
Exhibit.DataEdit._invokeEventHandlers("onDelete",itemId);
};
Exhibit.DataEdit.clone=function(itemId){if(!Exhibit.DataEdit._invokeEventHandlers("onBeforeClone",itemId)){return ;
}if(confirm("Do you really want to clone this item?\nItem: "+itemId)){var keyProp=(database.getObject(itemId,"id"))?"id":"label";
var _id=database.getObject(itemId,keyProp);
if(!_id||_id!=itemId){return ;
}if(_id.match(/\d+$/)){var m=_id.match(/(.*?)(\d*)$/);
var base=m[1];
var n=(m[2].length)?parseInt(m[2]):0;
do{n++;
}while(database.containsItem(base+n));
_id=base+n;
}else{_id=_id+"2";
}var srcItem=database._spo[itemId];
var destItem={};
for(var p in srcItem){var sa=srcItem[p];
if(typeof sa=="object"){var da=[];
for(var i in sa){da.push(sa[i]);
}destItem[p]=da;
}else{destItem[p]=sa;
}}destItem[keyProp]=[_id];
var hType="onCloning";
for(var i=0;
i<Exhibit.DataEdit._lifeCycleEventHandlers_.length;
i++){var handler=Exhibit.DataEdit._lifeCycleEventHandlers_[i];
destItem=(handler[hType])?handler[hType](itemId,_id,destItem):destItem;
}database.loadData({items:[destItem]});
}else{return ;
}database._listeners.fire("onAfterLoadingItems",[]);
Exhibit.DataEdit._setEditLock(false);
Exhibit.DataEdit._invokeEventHandlers("onClone",itemId);
};
Exhibit.DataEdit.create=function(itemId){if(!Exhibit.DataEdit._invokeEventHandlers("onBeforeCreate",itemId)){return ;
}var item={};
var srcItem=database._spo[itemId];
for(p in srcItem){var o=database.getObject(itemId,p);
if(typeof o=="number"){item[p]=0;
}else{if(typeof o=="boolean"){item[p]=false;
}else{if(typeof o=="string"){if(o.match(/^(\+|\-)?\d+(\.\d+)?$/)){item[p]=0;
}else{item[p]="";
}}else{item[p]="";
}}}}var type=database.getObject(itemId,"type");
item["type"]=(type)?type:"item";
var keyProp=(database.getObject(itemId,"id"))?"id":"label";
item[keyProp]="item"+(new Date().getTime());
var hType="onCreating";
for(var i=0;
i<Exhibit.DataEdit._lifeCycleEventHandlers_.length;
i++){var handler=Exhibit.DataEdit._lifeCycleEventHandlers_[i];
item=(handler[hType])?handler[hType](item[keyProp],item):item;
}database.loadData({items:[item]});
database._listeners.fire("onAfterLoadingItems",[]);
Exhibit.DataEdit._setEditLock(false);
Exhibit.DataEdit._invokeEventHandlers("onCreate",itemId);
};
Exhibit.DataEdit.save=function(itemId){var self=this;
var mode=Exhibit.DataEdit.UPDATE_MODE;
var editor=Exhibit.DataEdit._editors_[itemId];
var fields=editor.getFields();
Exhibit.DataEdit._onSaveMessages=[];
var item={};
for(var fieldId in fields){item[fieldId]=fields[fieldId].getValue();
}if(!Exhibit.DataEdit._invokeEventHandlers("onBeforeSave",itemId,item)){return ;
}for(var fieldId in fields){fields[fieldId].setError(false);
}for(var fieldId in fields){var f=fields[fieldId];
if(Exhibit.DataEdit._saveField(itemId,fieldId,f)){return ;
}}var success=Exhibit.DataEdit._invokeEventHandlers("onSave",itemId,item);
Exhibit.DataEdit._checkForSaveFailure(success);
};
Exhibit.DataEdit._setEditLock=function(b){Exhibit.DataEdit._lock_=b;
$(".exhibitDataEditButton #editorToggleSymbol").html(Exhibit.DataEdit._lock_?'<span class="on">&#10004;</span>':'<span class="off">&#10006;</span>');
$(".exhibitDataEditButton #editorToggleText").html(Exhibit.DataEdit._lock_?"Stop editing":"Start editing");
};
Exhibit.DataEdit.onChange=function(itemId,fieldId){var editor=Exhibit.DataEdit._editors_[itemId];
var fields=editor.getFields();
var f=fields[fieldId];
var item={};
item[fieldId]=f.getValue();
Exhibit.DataEdit._onSaveMessages=[];
if(!Exhibit.DataEdit._invokeEventHandlers("onBeforeSave",itemId,item)){return ;
}if(Exhibit.DataEdit._saveField(itemId,fieldId,f)){$("."+Exhibit.DataEdit.STATUS_CLASS).each(function(idx){$(this).html(err);
});
}var success=Exhibit.DataEdit._invokeEventHandlers("onSave",itemId,item);
Exhibit.DataEdit._checkForSaveFailure(success);
};
Exhibit.DataEdit.log=function(){if(window.console&&Exhibit.DataEdit._DEBUG_){console.log.apply(this,arguments);
}};
Exhibit.DataEdit._checkForSaveFailure=function(success){if(!success){if(Exhibit.DataEdit.onSaveFailed){Exhibit.DataEdit.onSaveFailed(Exhibit.DataEdit._onSaveMessages);
}else{if(Exhibit.DataEdit._onSaveMessages.length>0){var s="";
for(var i=0;
i<Exhibit.DataEdit._onSaveMessages.length;
i++){s=s+Exhibit.DataEdit._onSaveMessages[i]+"\n";
}alert(s);
}}}};
Exhibit.DataEdit._saveField=function(itemId,fieldId,f){var mode=Exhibit.DataEdit.UPDATE_MODE;
var val=f.getValue();
var validators=f._validators;
if(validators){var _vNames=validators.split(",");
for(var i=0;
i<_vNames.length;
i++){var err=null;
var v=_vNames[i];
var found=false;
var vl=v.toLowerCase();
if(Exhibit.DataEdit._internalValidators[vl]){err=Exhibit.DataEdit._internalValidators[vl](val);
found=true;
}if(!found&&(window[v])&&(typeof window[v]=="function")){err=window[v](val);
found=true;
}if(!found){}if(err!=null){if($("#"+Exhibit.DataEdit.EDIT_MESSAGE).length){$("#"+Exhibit.DataEdit.EDIT_MESSAGE).html(err);
}else{alert(err);
}f.setError(true);
return true;
}}}if((mode==Exhibit.DataEdit.UPDATE_MODE)&&(val!=undefined)){database.removeObjects(itemId,fieldId);
if(val instanceof Array){Exhibit.DataEdit.log("Updating(array)",fieldId,val);
for(var j=0;
j<val.length;
j++){database.addStatement(itemId,fieldId,val[j]);
}}else{Exhibit.DataEdit.log("Updating(scalar)",fieldId,val);
database.addStatement(itemId,fieldId,val);
}}else{if((mode==Exhibit.DataEdit.CREATE_MODE)&&(val!=undefined)){Exhibit.DataEdit.log("Creating",fieldId,val);
}else{if(mode==Exhibit.DataEdit.DELETE_MODE){Exhibit.DataEdit.log("Deleting",fieldId,val);
database.removeObjects(itemId,fieldId);
}}}return false;
};
Exhibit.DataEdit.addEventHandler=function(h){if(h){Exhibit.DataEdit._lifeCycleEventHandlers_.push(h);
}};
Exhibit.DataEdit._invokeEventHandlers=function(type,id,item){var ret=true;
for(var i=0;
i<Exhibit.DataEdit._lifeCycleEventHandlers_.length;
i++){var handler=Exhibit.DataEdit._lifeCycleEventHandlers_[i];
if(handler[type]){ret=ret&&handler[type](id,item);
}}return ret;
};
Exhibit.DataEdit._onSaveMessages=[];
Exhibit.DataEdit.addOnSaveFailedMessage=function(m){Exhibit.DataEdit._onSaveMessages.push(m);
};
Exhibit.DataEdit.onSaveFailed=null;
Exhibit.DataEdit.validateIsNotEmpty=function(v){var err="Cannot be empty";
if(v==undefined){return err;
}else{if((typeof v=="string")&&(v.length==0)){return err;
}else{if((typeof v=="number")&&(v==0)){return err;
}else{if((typeof v=="object")&&(v instanceof Array)&&(v.length==0)){return err;
}else{return null;
}}}}};
Exhibit.DataEdit.validateIsURL=function(v){var err="Must be a web address";
if(v==undefined||(typeof v!="string")){return err;
}return(!v.match(/^http:\/\//))?err:null;
};
Exhibit.DataEdit._internalValidators={"notempty":Exhibit.DataEdit.validateIsNotEmpty,"isurl":Exhibit.DataEdit.validateIsURL};
Exhibit.DataEdit._setup_injectActivateButton=function(){var filterActivate=function(idx){return $(this).attr("ex:role")==Exhibit.DataEdit.EDIT_ROLE_ACTIVATE;
};
var l=$("*").filter(filterActivate);
if(l.length>0){l.each(function(idx){try{$(this).click(function(){Exhibit.DataEdit.activate();
});
}catch(err){SimileAjax.Debug.warn(err);
}});
}else{var buttonHTML='<div style="position:Fixed; right:1em;  top:1em;"><div class="'+Exhibit.DataEdit.EDIT_BUTTON+'"><a href="javascript:Exhibit.DataEdit.activate();"><div><span id="editorToggleSymbol"><span class="off">&#10006;</span></span>&nbsp;<span id="editorToggleText">Start editing</span></div></a></div></div>';
var body=$("body").first().append(buttonHTML);
}};
Exhibit.DataEdit._setup_scanForEditButtonInDisplayLens=function(){var filterEdit=function(idx){return $(this).attr("ex:role")==Exhibit.DataEdit.EDIT_ROLE_EDIT;
};
var l=$("*").filter(filterEdit);
if(l.length>0){l.each(function(idx){$(this).attr("_ex:role",Exhibit.DataEdit.EDIT_ROLE_EDIT);
$(this).css("display","None");
});
}};
$(document).ready(function(){if(!Exhibit.DataEdit._invokeEventHandlers("onBeforeInit")){return ;
}Exhibit.DataEdit._setup_injectActivateButton();
Exhibit.DataEdit._invokeEventHandlers("onInit");
});


/* editor.js */
Exhibit.DataEdit.LensSpec=function(ty,html){this._type=ty;
this._lensHTML=html;
};
Exhibit.DataEdit.LensSpec._lenses=[];
Exhibit.DataEdit.LensSpec._DEBUG_=false;
Exhibit.DataEdit.LensSpec.prototype.getType=function(){return this._type;
};
Exhibit.DataEdit.LensSpec.prototype.getHTML=function(){return this._lensHTML;
};
$(document).ready(function(){var filter=function(idx){return $(this).attr("ex:role")==Exhibit.DataEdit.EDIT_ROLE_LENS;
};
if(window.console&&Exhibit.DataEdit.LensSpec._DEBUG_){console.log("Searching for editor lenses");
}$("*").filter(filter).each(function(idx){try{var ty=$(this).attr("ex:itemType");
var ht=$(this).html();
if(window.console&&Exhibit.DataEdit.LensSpec._DEBUG_){console.log("  Lens found: "+ty);
}Exhibit.DataEdit.LensSpec._lenses[ty]=new Exhibit.DataEdit.LensSpec(ty,ht);
$(this).remove();
}catch(err){SimileAjax.Debug.warn(err);
}});
});
Exhibit.DataEdit.Editor=function(itemId,jqThis){this._itemId=itemId;
this._jqThis=jqThis;
this._fields={};
this._hasSaveButton=false;
this._hasCancelButton=false;
this._hasStatus=false;
};
Exhibit.DataEdit.Editor._DEBUG_=false;
Exhibit.DataEdit.Editor._BGCOL_="#dddddd";
Exhibit.DataEdit.Editor._ERRCOL_="#ff8888";
Exhibit.DataEdit.Editor._COMPONENTS_=["TextField","NumberField","EnumField","ListField","TickListField"];
Exhibit.DataEdit.Editor.prototype.apply=function(){var type=database.getObject(this._itemId,"type");
var lens=(type)?Exhibit.DataEdit.LensSpec._lenses[type]:null;
if(lens){this.log("applyWithLens() "+this._itemId+":"+type);
this.applyWithLens(lens);
}else{this.log("applyWithoutLens() "+this._itemId+":"+type);
this.applyWithoutLens();
}};
Exhibit.DataEdit.Editor.prototype.applyWithLens=function(lens){var self=this;
$(self._jqThis).html(lens._lensHTML);
var saveFilter=function(idx){return $(this).attr("ex:role")==Exhibit.DataEdit.EDIT_ROLE_SAVE;
};
$("*",self._jqThis).filter(saveFilter).each(function(idx){$(this).click(function(){Exhibit.DataEdit.save(self._itemId);
});
self._hasSaveButton=true;
});
var statusFilter=function(idx){return $(this).attr("ex:role")==Exhibit.DataEdit.EDIT_ROLE_STATUS;
};
$("*",self._jqThis).filter(statusFilter).each(function(idx){$(this).attr("id",Exhibit.DataEdit.EDIT_MESSAGE);
self._hasStatus=true;
});
var onShow=[];
for(var i=0;
i<Exhibit.DataEdit.Editor._COMPONENTS_.length;
i++){var c=Exhibit.DataEdit.Editor._COMPONENTS_[i];
self.log("Scanning for "+c);
Exhibit.DataEdit.Editor[c].domFilter(self._jqThis,function(idx){var prop,val,f;
try{prop=self._getContent(this);
if(!prop){throw"Missing target (ex:content)";
}val=(self._exists(prop))?self._getValues(prop):undefined;
try{f=new Exhibit.DataEdit.Editor[c](this,self._itemId,prop,val,false);
f._saveOnChange=(!self._hasSaveButton);
}catch(err){self.log(err,prop,val,this);
SimileAjax.Debug.warn(err);
}self._addFieldComponent(this,prop,f,onShow,true);
}catch(err){self.log(err,prop,val,this);
}});
}for(var i=0;
i<onShow.length;
i++){onShow[i]();
}};
Exhibit.DataEdit.Editor.prototype.applyWithoutLens=function(){var self=this;
var onShow=[];
var filter=function(idx){return $(this).attr("ex:content");
};
$("*",self._jqThis).filter(filter).each(function(idx){var prop,val,f;
try{var exp=$(this).attr("ex:content");
if(!exp){return ;
}var prop=self._getContent(this);
if(prop){val=self._getValues(prop);
try{var t=self._guessFieldType(exp,val);
f=new Exhibit.DataEdit.Editor[t](this,self._itemId,prop,val,true);
f._saveOnChange=true;
}catch(err){self.log(err,prop,val,self);
SimileAjax.Debug.warn(err);
}self._addFieldComponent(this,prop,f,onShow,false);
}}catch(err){self.log(err,prop,val,self);
}});
for(var i=0;
i<onShow.length;
i++){onShow[i]();
}};
Exhibit.DataEdit.Editor.prototype._guessFieldType=function(exp,val){if((typeof val=="object")&&(val instanceof Array)){return"ListField";
}if(typeof val=="number"){return"NumberField";
}if(typeof val=="string"){return"TextField";
}return"TextField";
};
Exhibit.DataEdit.Editor.prototype._exists=function(prop){return database.getObject(this._itemId,prop);
};
Exhibit.DataEdit.Editor.prototype._getValues=function(prop){var valArr=[];
database.getObjects(this._itemId,prop).visit(function(val){valArr.push(val);
});
return(valArr.length>1)?valArr:valArr[0];
};
Exhibit.DataEdit.Editor.prototype._getContent=function(jq){var exp=$(jq).attr("ex:content");
if(!exp){return null;
}var m=exp.match(/^\.(.+)?\.?/);
return(m&&m.length>1)?m[1]:null;
};
Exhibit.DataEdit.Editor.prototype._addFieldComponent=function(jq,prop,f,onShow,usingLens){if(f){this._fields[prop]=f;
var h=f.getHTML(onShow);
var srcDim={width:$(jq).width(),height:$(jq).height()};
var prefDim=f["_prefDimensions"];
if(false&&!usingLens&&prefDim&&((srcDim.width<prefDim.width)||(srcDim.height<prefDim.height))){h='<span style="display:Inline-Block; position:Relative; width:'+srcDim.width+"px; height:"+srcDim.height+'px;">'+h+"</span>";
$(jq).replaceWith(h);
$("#"+f._divId).mouseenter(function(ev){var pos=$(this).parent().position();
$(this).width(prefDim.width).height(prefDim.height).css("z-index","1000");
}).mouseleave(function(ev){$(this).width(srcDim.width).height(srcDim.height).css("z-index","Auto");
}).css("position","Absolute").css("top","0px").css("left","0px");
if(srcDim.width<=0){srcDim.width=10;
$("#"+f._divId).width(srcDim.width);
}if(srcDim.height<=0){srcDim.height=10;
$("#"+f._divId).height(srcDim.height);
}}else{$(jq).replaceWith(h);
}}else{$(jq).replaceWith('<span style="color:Red;">Failed to initalise</span>');
}};
Exhibit.DataEdit.Editor._uniqueObjects=function(itemType,predicate){var v=[];
var itemKeys=database.getAllItems().toArray();
for(var i=0;
i<itemKeys.length;
i++){var item=database.getItem(itemKeys[i]);
if(item.type!=itemType){continue;
}database.getObjects(item.id,predicate).visit(function(val){v[val]=true;
});
}var list=[];
for(var i in v){list.push(i);
}return list.sort();
};
Exhibit.DataEdit.Editor._parseTrueFalse=function(s,def){def=(def==undefined)?false:def;
if(!s){return def;
}s=s.toLowerCase();
return(s==="true"||s==="yes");
};
Exhibit.DataEdit.Editor._parseDisabledFor=function(s){var flags={edit:true,add:true};
if(s){var arr=s.split(",");
for(var i=0;
i<arr.length;
i++){var a=arr[i].toLowerCase();
if(a=="edit"||a=="all"){flags.edit=true;
}else{if(a=="add"||a=="all"){flags.add=true;
}}}}return flags;
};
Exhibit.DataEdit.Editor._htmlTag=function(elName,attr,srcEl,closed){for(var i=0;
i<srcEl.attributes.length;
i++){var n=srcEl.attributes[i].name;
var v=srcEl.attributes[i].value;
if((srcEl.attributes[i].specified!=undefined)&&!srcEl.attributes[i].specified){continue;
}if(attr[n]==undefined){attr[n]=v;
}}var s="<"+elName;
for(k in attr){if(attr[k]){s=s+" "+k+'="'+attr[k]+'"';
}}s=s+((closed)?"/>":">");
return s;
};
Exhibit.DataEdit.Editor._extractStyle=function(jq){var props=["font-family","font-size","font-weight","font-style","text-transform","text-decoration","letter-spacing","word-spacing","line-height","text-align","vertical-align","margin-top","margin-right","margin-bottom","margin-left","padding-top","padding-right","padding-bottom","padding-left"];
var s="";
for(var i=0;
i<props.length;
i++){var v=$(jq).css(props[i])+"";
if(v){v=v.replace(/["|']/gi,"");
s=s+props[i]+":"+v+"; ";
}}return s;
};
Exhibit.DataEdit.Editor._getColRowDimensions=function(jq,cols,rows){$(jq).prepend('<span id="__SIZE_GUESSER__">M</span>');
var textW=$("#__SIZE_GUESSER__",jq).width();
var textH=$("#__SIZE_GUESSER__",jq).height();
$("#__SIZE_GUESSER__",jq).remove();
return{width:(cols*textW),height:(rows*textH)};
};
Exhibit.DataEdit.Editor._uid=(new Date).getTime();
Exhibit.DataEdit.Editor._getUID=function(){Exhibit.DataEdit.Editor._uid++;
return Exhibit.DataEdit.Editor._uid;
};
Exhibit.DataEdit.Editor._escapeString=function(str){var r="";
for(var i=0;
i<str.length;
i++){var c=str.charCodeAt(i);
var isAlpha=((c>=97&&c<=122)||(c>=65&&c<=90));
if(isAlpha){r=r+str.charAt(i);
}else{r=r+((c<16)?"0":"")+c.toString(16);
}}return r;
};
Exhibit.DataEdit.Editor.matchExactStringFromList=function(str,list){var lstr=str.toLowerCase();
for(var i=0;
i<list.length;
i++){if(lstr===list[i].toLowerCase()){return list[i];
}}return null;
};
Exhibit.DataEdit.Editor.matchClosestStringFromList=function(str,list){var lstr=str.toLowerCase();
var closest=9999;
var closestIdx=-1;
for(var i=0;
i<list.length;
i++){var li=list[i].substring(0,lstr.length).toLowerCase();
var m=Exhibit.DataEdit.Editor._levenshteinDistance(lstr,li);
if(m<closest){closest=m;
closestIdx=i;
}}if(closestIdx!=-1){return list[closestIdx];
}else{return null;
}};
Exhibit.DataEdit.Editor._levenshteinDistance=function(s1,s2){if(s1.length<s2.length){var t=s1;
s1=s2;
s2=t;
}var sz1=s1.length;
var sz2=s2.length;
var r=new Array();
r[0]=new Array();
for(var i=0;
i<sz1+1;
i++){r[0][i]=i;
}var smallest=function(p1,p2,p3){if(p1<p2&&p1<p3){return p1;
}else{if(p2<p1&&p2<p3){return p2;
}else{return p3;
}}};
for(var i=1;
i<sz1+1;
i++){r[i]=new Array();
r[i][0]=i;
for(var j=1;
j<sz2+1;
j++){var cost=(s1.charAt(i-1)==s2.charAt(j-1))?0:1;
r[i][j]=smallest(r[i-1][j]+1,r[i][j-1]+1,r[i-1][j-1]+cost);
}}return r[sz1][sz2];
};
Exhibit.DataEdit.Editor.prototype.getFields=function(){return this._fields;
};
Exhibit.DataEdit.Editor.prototype.log=function(){if(window["console"]&&Exhibit.DataEdit.Editor._DEBUG_){console.log.apply(this,arguments);
}};


/* enum-field.js */
Exhibit.DataEdit.Editor.EnumField=function(jq,iid,pid,val,noLens){this._jqThis=jq;
this._itemId=iid;
this._propId=pid;
this._value=val;
this._divId="__DATAEDITOR__"+this._propId+"_"+Exhibit.DataEdit.Editor._getUID();
this._validators=$(jq).attr("ex:validators");
this._disabledFor=Exhibit.DataEdit.Editor._parseDisabledFor($(jq).attr("ex:disableFor"));
this._noEditorLens=noLens;
this._matchDisplayLens=Exhibit.DataEdit.Editor._parseTrueFalse($(jq).attr("ex:useDisplayStyle"));
this._saveOnChange=false;
this._options=[];
this._allowNew=Exhibit.DataEdit.Editor._parseTrueFalse($(jq).attr("ex:allowNew"),true);
var self=this;
$("option",this._jqThis).each(function(idx){self._options.push($(this).attr("value"));
});
if(this._options.length==0){var type=database.getObject(this._itemId,"type");
this._options=Exhibit.DataEdit.Editor._uniqueObjects(type,this._propId);
}if(this._value==undefined){this._value=(this._options.length>0)?this._options[0]:"";
}if((typeof this._value)!="string"){throw"Invalid data for EnumField";
}};
Exhibit.DataEdit.Editor.EnumField.prototype.getHTML=function(onShow){var self=this;
onShow.push(function(){var ip=$("#"+self._divId);
ip.bind("blur",function(ev){self.setValue(self.getValue());
});
ip.autocomplete({source:self._options});
if(this._saveOnChange){ip.bind("change",function(ev){Exhibit.DataEdit.onChange(self._itemId,self._propId);
});
}});
var style=null;
if(this._noEditorLens||this._matchDisplayLens){style=Exhibit.DataEdit.Editor._extractStyle(this._jqThis)+"border-width: 0px; width: "+$(this._jqThis).width()+"px; height: "+$(this._jqThis).height()+"px; ";
}var tag=Exhibit.DataEdit.Editor._htmlTag("input",{"id":this._divId,"style":style,"class":"exhibitDataEditEnumField","value":this._value},$(this._jqThis).get()[0],true);
return tag;
};
Exhibit.DataEdit.Editor.EnumField.prototype.getValue=function(){var els=$("#"+this._divId).get();
if(els.length){var word=els[0].value;
if(word.length>0){var z=Exhibit.DataEdit.Editor.matchExactStringFromList(word,this._options);
if(z!=null){return z;
}else{if(this._allowNew){return word;
}else{z=Exhibit.DataEdit.Editor.matchClosestStringFromList(word,this._options);
if(z){return z;
}}}}}return null;
};
Exhibit.DataEdit.Editor.EnumField.prototype.setValue=function(v){var els=$("#"+this._divId).get();
if(els.length){els[0].value=v;
}};
Exhibit.DataEdit.Editor.EnumField.prototype.setError=function(b){$("#"+this._divId).css("background-color",b?Exhibit.DataEdit.Editor._ERRCOL_:Exhibit.DataEdit.Editor._BGCOL_);
};
Exhibit.DataEdit.Editor.EnumField.domFilter=function(jqThis,f){$("select",jqThis).filter(function(idx){return $(this).attr("ex:type")=="enum";
}).each(f);
};


/* jquery-ui-1.8.16.custom.min.js */
(function(c,j){function k(a,b){var d=a.nodeName.toLowerCase();
if("area"===d){b=a.parentNode;
d=b.name;
if(!a.href||!d||b.nodeName.toLowerCase()!=="map"){return false;
}a=c("img[usemap=#"+d+"]")[0];
return !!a&&l(a);
}return(/input|select|textarea|button|object/.test(d)?!a.disabled:"a"==d?a.href||b:b)&&l(a);
}function l(a){return !c(a).parents().andSelf().filter(function(){return c.curCSS(this,"visibility")==="hidden"||c.expr.filters.hidden(this);
}).length;
}c.ui=c.ui||{};
if(!c.ui.version){c.extend(c.ui,{version:"1.8.16",keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}});
c.fn.extend({propAttr:c.fn.prop||c.fn.attr,_focus:c.fn.focus,focus:function(a,b){return typeof a==="number"?this.each(function(){var d=this;
setTimeout(function(){c(d).focus();
b&&b.call(d);
},a);
}):this._focus.apply(this,arguments);
},scrollParent:function(){var a;
a=c.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(c.curCSS(this,"position",1))&&/(auto|scroll)/.test(c.curCSS(this,"overflow",1)+c.curCSS(this,"overflow-y",1)+c.curCSS(this,"overflow-x",1));
}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(c.curCSS(this,"overflow",1)+c.curCSS(this,"overflow-y",1)+c.curCSS(this,"overflow-x",1));
}).eq(0);
return/fixed/.test(this.css("position"))||!a.length?c(document):a;
},zIndex:function(a){if(a!==j){return this.css("zIndex",a);
}if(this.length){a=c(this[0]);
for(var b;
a.length&&a[0]!==document;
){b=a.css("position");
if(b==="absolute"||b==="relative"||b==="fixed"){b=parseInt(a.css("zIndex"),10);
if(!isNaN(b)&&b!==0){return b;
}}a=a.parent();
}}return 0;
},disableSelection:function(){return this.bind((c.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(a){a.preventDefault();
});
},enableSelection:function(){return this.unbind(".ui-disableSelection");
}});
c.each(["Width","Height"],function(a,b){function d(f,g,m,n){c.each(e,function(){g-=parseFloat(c.curCSS(f,"padding"+this,true))||0;
if(m){g-=parseFloat(c.curCSS(f,"border"+this+"Width",true))||0;
}if(n){g-=parseFloat(c.curCSS(f,"margin"+this,true))||0;
}});
return g;
}var e=b==="Width"?["Left","Right"]:["Top","Bottom"],h=b.toLowerCase(),i={innerWidth:c.fn.innerWidth,innerHeight:c.fn.innerHeight,outerWidth:c.fn.outerWidth,outerHeight:c.fn.outerHeight};
c.fn["inner"+b]=function(f){if(f===j){return i["inner"+b].call(this);
}return this.each(function(){c(this).css(h,d(this,f)+"px");
});
};
c.fn["outer"+b]=function(f,g){if(typeof f!=="number"){return i["outer"+b].call(this,f);
}return this.each(function(){c(this).css(h,d(this,f,true,g)+"px");
});
};
});
c.extend(c.expr[":"],{data:function(a,b,d){return !!c.data(a,d[3]);
},focusable:function(a){return k(a,!isNaN(c.attr(a,"tabindex")));
},tabbable:function(a){var b=c.attr(a,"tabindex"),d=isNaN(b);
return(d||b>=0)&&k(a,!d);
}});
c(function(){var a=document.body,b=a.appendChild(b=document.createElement("div"));
c.extend(b.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0});
c.support.minHeight=b.offsetHeight===100;
c.support.selectstart="onselectstart" in b;
a.removeChild(b).style.display="none";
});
c.extend(c.ui,{plugin:{add:function(a,b,d){a=c.ui[a].prototype;
for(var e in d){a.plugins[e]=a.plugins[e]||[];
a.plugins[e].push([b,d[e]]);
}},call:function(a,b,d){if((b=a.plugins[b])&&a.element[0].parentNode){for(var e=0;
e<b.length;
e++){a.options[b[e][0]]&&b[e][1].apply(a.element,d);
}}}},contains:function(a,b){return document.compareDocumentPosition?a.compareDocumentPosition(b)&16:a!==b&&a.contains(b);
},hasScroll:function(a,b){if(c(a).css("overflow")==="hidden"){return false;
}b=b&&b==="left"?"scrollLeft":"scrollTop";
var d=false;
if(a[b]>0){return true;
}a[b]=1;
d=a[b]>0;
a[b]=0;
return d;
},isOverAxis:function(a,b,d){return a>b&&a<b+d;
},isOver:function(a,b,d,e,h,i){return c.ui.isOverAxis(a,d,h)&&c.ui.isOverAxis(b,e,i);
}});
}})(jQuery);
(function(b,j){if(b.cleanData){var k=b.cleanData;
b.cleanData=function(a){for(var c=0,d;
(d=a[c])!=null;
c++){try{b(d).triggerHandler("remove");
}catch(e){}}k(a);
};
}else{var l=b.fn.remove;
b.fn.remove=function(a,c){return this.each(function(){if(!c){if(!a||b.filter(a,[this]).length){b("*",this).add([this]).each(function(){try{b(this).triggerHandler("remove");
}catch(d){}});
}}return l.call(b(this),a,c);
});
};
}b.widget=function(a,c,d){var e=a.split(".")[0],f;
a=a.split(".")[1];
f=e+"-"+a;
if(!d){d=c;
c=b.Widget;
}b.expr[":"][f]=function(h){return !!b.data(h,a);
};
b[e]=b[e]||{};
b[e][a]=function(h,g){arguments.length&&this._createWidget(h,g);
};
c=new c;
c.options=b.extend(true,{},c.options);
b[e][a].prototype=b.extend(true,c,{namespace:e,widgetName:a,widgetEventPrefix:b[e][a].prototype.widgetEventPrefix||a,widgetBaseClass:f},d);
b.widget.bridge(a,b[e][a]);
};
b.widget.bridge=function(a,c){b.fn[a]=function(d){var e=typeof d==="string",f=Array.prototype.slice.call(arguments,1),h=this;
d=!e&&f.length?b.extend.apply(null,[true,d].concat(f)):d;
if(e&&d.charAt(0)==="_"){return h;
}e?this.each(function(){var g=b.data(this,a),i=g&&b.isFunction(g[d])?g[d].apply(g,f):g;
if(i!==g&&i!==j){h=i;
return false;
}}):this.each(function(){var g=b.data(this,a);
g?g.option(d||{})._init():b.data(this,a,new c(d,this));
});
return h;
};
};
b.Widget=function(a,c){arguments.length&&this._createWidget(a,c);
};
b.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:false},_createWidget:function(a,c){b.data(c,this.widgetName,this);
this.element=b(c);
this.options=b.extend(true,{},this.options,this._getCreateOptions(),a);
var d=this;
this.element.bind("remove."+this.widgetName,function(){d.destroy();
});
this._create();
this._trigger("create");
this._init();
},_getCreateOptions:function(){return b.metadata&&b.metadata.get(this.element[0])[this.widgetName];
},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName);
this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+"-disabled ui-state-disabled");
},widget:function(){return this.element;
},option:function(a,c){var d=a;
if(arguments.length===0){return b.extend({},this.options);
}if(typeof a==="string"){if(c===j){return this.options[a];
}d={};
d[a]=c;
}this._setOptions(d);
return this;
},_setOptions:function(a){var c=this;
b.each(a,function(d,e){c._setOption(d,e);
});
return this;
},_setOption:function(a,c){this.options[a]=c;
if(a==="disabled"){this.widget()[c?"addClass":"removeClass"](this.widgetBaseClass+"-disabled ui-state-disabled").attr("aria-disabled",c);
}return this;
},enable:function(){return this._setOption("disabled",false);
},disable:function(){return this._setOption("disabled",true);
},_trigger:function(a,c,d){var e=this.options[a];
c=b.Event(c);
c.type=(a===this.widgetEventPrefix?a:this.widgetEventPrefix+a).toLowerCase();
d=d||{};
if(c.originalEvent){a=b.event.props.length;
for(var f;
a;
){f=b.event.props[--a];
c[f]=c.originalEvent[f];
}}this.element.trigger(c,d);
return !(b.isFunction(e)&&e.call(this.element[0],c,d)===false||c.isDefaultPrevented());
}};
})(jQuery);
(function(c){c.ui=c.ui||{};
var n=/left|center|right/,o=/top|center|bottom/,t=c.fn.position,u=c.fn.offset;
c.fn.position=function(b){if(!b||!b.of){return t.apply(this,arguments);
}b=c.extend({},b);
var a=c(b.of),d=a[0],g=(b.collision||"flip").split(" "),e=b.offset?b.offset.split(" "):[0,0],h,k,j;
if(d.nodeType===9){h=a.width();
k=a.height();
j={top:0,left:0};
}else{if(d.setTimeout){h=a.width();
k=a.height();
j={top:a.scrollTop(),left:a.scrollLeft()};
}else{if(d.preventDefault){b.at="left top";
h=k=0;
j={top:b.of.pageY,left:b.of.pageX};
}else{h=a.outerWidth();
k=a.outerHeight();
j=a.offset();
}}}c.each(["my","at"],function(){var f=(b[this]||"").split(" ");
if(f.length===1){f=n.test(f[0])?f.concat(["center"]):o.test(f[0])?["center"].concat(f):["center","center"];
}f[0]=n.test(f[0])?f[0]:"center";
f[1]=o.test(f[1])?f[1]:"center";
b[this]=f;
});
if(g.length===1){g[1]=g[0];
}e[0]=parseInt(e[0],10)||0;
if(e.length===1){e[1]=e[0];
}e[1]=parseInt(e[1],10)||0;
if(b.at[0]==="right"){j.left+=h;
}else{if(b.at[0]==="center"){j.left+=h/2;
}}if(b.at[1]==="bottom"){j.top+=k;
}else{if(b.at[1]==="center"){j.top+=k/2;
}}j.left+=e[0];
j.top+=e[1];
return this.each(function(){var f=c(this),l=f.outerWidth(),m=f.outerHeight(),p=parseInt(c.curCSS(this,"marginLeft",true))||0,q=parseInt(c.curCSS(this,"marginTop",true))||0,v=l+p+(parseInt(c.curCSS(this,"marginRight",true))||0),w=m+q+(parseInt(c.curCSS(this,"marginBottom",true))||0),i=c.extend({},j),r;
if(b.my[0]==="right"){i.left-=l;
}else{if(b.my[0]==="center"){i.left-=l/2;
}}if(b.my[1]==="bottom"){i.top-=m;
}else{if(b.my[1]==="center"){i.top-=m/2;
}}i.left=Math.round(i.left);
i.top=Math.round(i.top);
r={left:i.left-p,top:i.top-q};
c.each(["left","top"],function(s,x){c.ui.position[g[s]]&&c.ui.position[g[s]][x](i,{targetWidth:h,targetHeight:k,elemWidth:l,elemHeight:m,collisionPosition:r,collisionWidth:v,collisionHeight:w,offset:e,my:b.my,at:b.at});
});
c.fn.bgiframe&&f.bgiframe();
f.offset(c.extend(i,{using:b.using}));
});
};
c.ui.position={fit:{left:function(b,a){var d=c(window);
d=a.collisionPosition.left+a.collisionWidth-d.width()-d.scrollLeft();
b.left=d>0?b.left-d:Math.max(b.left-a.collisionPosition.left,b.left);
},top:function(b,a){var d=c(window);
d=a.collisionPosition.top+a.collisionHeight-d.height()-d.scrollTop();
b.top=d>0?b.top-d:Math.max(b.top-a.collisionPosition.top,b.top);
}},flip:{left:function(b,a){if(a.at[0]!=="center"){var d=c(window);
d=a.collisionPosition.left+a.collisionWidth-d.width()-d.scrollLeft();
var g=a.my[0]==="left"?-a.elemWidth:a.my[0]==="right"?a.elemWidth:0,e=a.at[0]==="left"?a.targetWidth:-a.targetWidth,h=-2*a.offset[0];
b.left+=a.collisionPosition.left<0?g+e+h:d>0?g+e+h:0;
}},top:function(b,a){if(a.at[1]!=="center"){var d=c(window);
d=a.collisionPosition.top+a.collisionHeight-d.height()-d.scrollTop();
var g=a.my[1]==="top"?-a.elemHeight:a.my[1]==="bottom"?a.elemHeight:0,e=a.at[1]==="top"?a.targetHeight:-a.targetHeight,h=-2*a.offset[1];
b.top+=a.collisionPosition.top<0?g+e+h:d>0?g+e+h:0;
}}}};
if(!c.offset.setOffset){c.offset.setOffset=function(b,a){if(/static/.test(c.curCSS(b,"position"))){b.style.position="relative";
}var d=c(b),g=d.offset(),e=parseInt(c.curCSS(b,"top",true),10)||0,h=parseInt(c.curCSS(b,"left",true),10)||0;
g={top:a.top-g.top+e,left:a.left-g.left+h};
"using" in a?a.using.call(b,g):d.css(g);
};
c.fn.offset=function(b){var a=this[0];
if(!a||!a.ownerDocument){return null;
}if(b){return this.each(function(){c.offset.setOffset(this,b);
});
}return u.call(this);
};
}})(jQuery);
(function(d){var e=0;
d.widget("ui.autocomplete",{options:{appendTo:"body",autoFocus:false,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null},pending:0,_create:function(){var a=this,b=this.element[0].ownerDocument,g;
this.element.addClass("ui-autocomplete-input").attr("autocomplete","off").attr({role:"textbox","aria-autocomplete":"list","aria-haspopup":"true"}).bind("keydown.autocomplete",function(c){if(!(a.options.disabled||a.element.propAttr("readOnly"))){g=false;
var f=d.ui.keyCode;
switch(c.keyCode){case f.PAGE_UP:a._move("previousPage",c);
break;
case f.PAGE_DOWN:a._move("nextPage",c);
break;
case f.UP:a._move("previous",c);
c.preventDefault();
break;
case f.DOWN:a._move("next",c);
c.preventDefault();
break;
case f.ENTER:case f.NUMPAD_ENTER:if(a.menu.active){g=true;
c.preventDefault();
}case f.TAB:if(!a.menu.active){return ;
}a.menu.select(c);
break;
case f.ESCAPE:a.element.val(a.term);
a.close(c);
break;
default:clearTimeout(a.searching);
a.searching=setTimeout(function(){if(a.term!=a.element.val()){a.selectedItem=null;
a.search(null,c);
}},a.options.delay);
break;
}}}).bind("keypress.autocomplete",function(c){if(g){g=false;
c.preventDefault();
}}).bind("focus.autocomplete",function(){if(!a.options.disabled){a.selectedItem=null;
a.previous=a.element.val();
}}).bind("blur.autocomplete",function(c){if(!a.options.disabled){clearTimeout(a.searching);
a.closing=setTimeout(function(){a.close(c);
a._change(c);
},150);
}});
this._initSource();
this.response=function(){return a._response.apply(a,arguments);
};
this.menu=d("<ul></ul>").addClass("ui-autocomplete").appendTo(d(this.options.appendTo||"body",b)[0]).mousedown(function(c){var f=a.menu.element[0];
d(c.target).closest(".ui-menu-item").length||setTimeout(function(){d(document).one("mousedown",function(h){h.target!==a.element[0]&&h.target!==f&&!d.ui.contains(f,h.target)&&a.close();
});
},1);
setTimeout(function(){clearTimeout(a.closing);
},13);
}).menu({focus:function(c,f){f=f.item.data("item.autocomplete");
false!==a._trigger("focus",c,{item:f})&&/^key/.test(c.originalEvent.type)&&a.element.val(f.value);
},selected:function(c,f){var h=f.item.data("item.autocomplete"),i=a.previous;
if(a.element[0]!==b.activeElement){a.element.focus();
a.previous=i;
setTimeout(function(){a.previous=i;
a.selectedItem=h;
},1);
}false!==a._trigger("select",c,{item:h})&&a.element.val(h.value);
a.term=a.element.val();
a.close(c);
a.selectedItem=h;
},blur:function(){a.menu.element.is(":visible")&&a.element.val()!==a.term&&a.element.val(a.term);
}}).zIndex(this.element.zIndex()+1).css({top:0,left:0}).hide().data("menu");
d.fn.bgiframe&&this.menu.element.bgiframe();
},destroy:function(){this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup");
this.menu.element.remove();
d.Widget.prototype.destroy.call(this);
},_setOption:function(a,b){d.Widget.prototype._setOption.apply(this,arguments);
a==="source"&&this._initSource();
if(a==="appendTo"){this.menu.element.appendTo(d(b||"body",this.element[0].ownerDocument)[0]);
}a==="disabled"&&b&&this.xhr&&this.xhr.abort();
},_initSource:function(){var a=this,b,g;
if(d.isArray(this.options.source)){b=this.options.source;
this.source=function(c,f){f(d.ui.autocomplete.filter(b,c.term));
};
}else{if(typeof this.options.source==="string"){g=this.options.source;
this.source=function(c,f){a.xhr&&a.xhr.abort();
a.xhr=d.ajax({url:g,data:c,dataType:"json",autocompleteRequest:++e,success:function(h){this.autocompleteRequest===e&&f(h);
},error:function(){this.autocompleteRequest===e&&f([]);
}});
};
}else{this.source=this.options.source;
}}},search:function(a,b){a=a!=null?a:this.element.val();
this.term=this.element.val();
if(a.length<this.options.minLength){return this.close(b);
}clearTimeout(this.closing);
if(this._trigger("search",b)!==false){return this._search(a);
}},_search:function(a){this.pending++;
this.element.addClass("ui-autocomplete-loading");
this.source({term:a},this.response);
},_response:function(a){if(!this.options.disabled&&a&&a.length){a=this._normalize(a);
this._suggest(a);
this._trigger("open");
}else{this.close();
}this.pending--;
this.pending||this.element.removeClass("ui-autocomplete-loading");
},close:function(a){clearTimeout(this.closing);
if(this.menu.element.is(":visible")){this.menu.element.hide();
this.menu.deactivate();
this._trigger("close",a);
}},_change:function(a){this.previous!==this.element.val()&&this._trigger("change",a,{item:this.selectedItem});
},_normalize:function(a){if(a.length&&a[0].label&&a[0].value){return a;
}return d.map(a,function(b){if(typeof b==="string"){return{label:b,value:b};
}return d.extend({label:b.label||b.value,value:b.value||b.label},b);
});
},_suggest:function(a){var b=this.menu.element.empty().zIndex(this.element.zIndex()+1);
this._renderMenu(b,a);
this.menu.deactivate();
this.menu.refresh();
b.show();
this._resizeMenu();
b.position(d.extend({of:this.element},this.options.position));
this.options.autoFocus&&this.menu.next(new d.Event("mouseover"));
},_resizeMenu:function(){var a=this.menu.element;
a.outerWidth(Math.max(a.width("").outerWidth(),this.element.outerWidth()));
},_renderMenu:function(a,b){var g=this;
d.each(b,function(c,f){g._renderItem(a,f);
});
},_renderItem:function(a,b){return d("<li></li>").data("item.autocomplete",b).append(d("<a></a>").text(b.label)).appendTo(a);
},_move:function(a,b){if(this.menu.element.is(":visible")){if(this.menu.first()&&/^previous/.test(a)||this.menu.last()&&/^next/.test(a)){this.element.val(this.term);
this.menu.deactivate();
}else{this.menu[a](b);
}}else{this.search(null,b);
}},widget:function(){return this.menu.element;
}});
d.extend(d.ui.autocomplete,{escapeRegex:function(a){return a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");
},filter:function(a,b){var g=new RegExp(d.ui.autocomplete.escapeRegex(b),"i");
return d.grep(a,function(c){return g.test(c.label||c.value||c);
});
}});
})(jQuery);
(function(d){d.widget("ui.menu",{_create:function(){var e=this;
this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({role:"listbox","aria-activedescendant":"ui-active-menuitem"}).click(function(a){if(d(a.target).closest(".ui-menu-item a").length){a.preventDefault();
e.select(a);
}});
this.refresh();
},refresh:function(){var e=this;
this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","menuitem").children("a").addClass("ui-corner-all").attr("tabindex",-1).mouseenter(function(a){e.activate(a,d(this).parent());
}).mouseleave(function(){e.deactivate();
});
},activate:function(e,a){this.deactivate();
if(this.hasScroll()){var b=a.offset().top-this.element.offset().top,g=this.element.scrollTop(),c=this.element.height();
if(b<0){this.element.scrollTop(g+b);
}else{b>=c&&this.element.scrollTop(g+b-c+a.height());
}}this.active=a.eq(0).children("a").addClass("ui-state-hover").attr("id","ui-active-menuitem").end();
this._trigger("focus",e,{item:a});
},deactivate:function(){if(this.active){this.active.children("a").removeClass("ui-state-hover").removeAttr("id");
this._trigger("blur");
this.active=null;
}},next:function(e){this.move("next",".ui-menu-item:first",e);
},previous:function(e){this.move("prev",".ui-menu-item:last",e);
},first:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length;
},last:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length;
},move:function(e,a,b){if(this.active){e=this.active[e+"All"](".ui-menu-item").eq(0);
e.length?this.activate(b,e):this.activate(b,this.element.children(a));
}else{this.activate(b,this.element.children(a));
}},nextPage:function(e){if(this.hasScroll()){if(!this.active||this.last()){this.activate(e,this.element.children(".ui-menu-item:first"));
}else{var a=this.active.offset().top,b=this.element.height(),g=this.element.children(".ui-menu-item").filter(function(){var c=d(this).offset().top-a-b+d(this).height();
return c<10&&c>-10;
});
g.length||(g=this.element.children(".ui-menu-item:last"));
this.activate(e,g);
}}else{this.activate(e,this.element.children(".ui-menu-item").filter(!this.active||this.last()?":first":":last"));
}},previousPage:function(e){if(this.hasScroll()){if(!this.active||this.first()){this.activate(e,this.element.children(".ui-menu-item:last"));
}else{var a=this.active.offset().top,b=this.element.height();
result=this.element.children(".ui-menu-item").filter(function(){var g=d(this).offset().top-a+b-d(this).height();
return g<10&&g>-10;
});
result.length||(result=this.element.children(".ui-menu-item:first"));
this.activate(e,result);
}}else{this.activate(e,this.element.children(".ui-menu-item").filter(!this.active||this.first()?":last":":first"));
}},hasScroll:function(){return this.element.height()<this.element[d.fn.prop?"prop":"attr"]("scrollHeight");
},select:function(e){this._trigger("selected",e,{item:this.active});
}});
})(jQuery);
(function(c,l){var m={buttons:true,height:true,maxHeight:true,maxWidth:true,minHeight:true,minWidth:true,width:true},n={maxHeight:true,maxWidth:true,minHeight:true,minWidth:true},o=c.attrFn||{val:true,css:true,html:true,text:true,data:true,width:true,height:true,offset:true,click:true};
c.widget("ui.dialog",{options:{autoOpen:true,buttons:{},closeOnEscape:true,closeText:"close",dialogClass:"",draggable:true,hide:null,height:"auto",maxHeight:false,maxWidth:false,minHeight:150,minWidth:150,modal:false,position:{my:"center",at:"center",collision:"fit",using:function(a){var b=c(this).css(a).offset().top;
b<0&&c(this).css("top",a.top-b);
}},resizable:true,show:null,stack:true,title:"",width:300,zIndex:1000},_create:function(){this.originalTitle=this.element.attr("title");
if(typeof this.originalTitle!=="string"){this.originalTitle="";
}this.options.title=this.options.title||this.originalTitle;
var a=this,b=a.options,d=b.title||"&#160;",e=c.ui.dialog.getTitleId(a.element),g=(a.uiDialog=c("<div></div>")).appendTo(document.body).hide().addClass("ui-dialog ui-widget ui-widget-content ui-corner-all "+b.dialogClass).css({zIndex:b.zIndex}).attr("tabIndex",-1).css("outline",0).keydown(function(i){if(b.closeOnEscape&&!i.isDefaultPrevented()&&i.keyCode&&i.keyCode===c.ui.keyCode.ESCAPE){a.close(i);
i.preventDefault();
}}).attr({role:"dialog","aria-labelledby":e}).mousedown(function(i){a.moveToTop(false,i);
});
a.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(g);
var f=(a.uiDialogTitlebar=c("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(g),h=c('<a href="#"></a>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role","button").hover(function(){h.addClass("ui-state-hover");
},function(){h.removeClass("ui-state-hover");
}).focus(function(){h.addClass("ui-state-focus");
}).blur(function(){h.removeClass("ui-state-focus");
}).click(function(i){a.close(i);
return false;
}).appendTo(f);
(a.uiDialogTitlebarCloseText=c("<span></span>")).addClass("ui-icon ui-icon-closethick").text(b.closeText).appendTo(h);
c("<span></span>").addClass("ui-dialog-title").attr("id",e).html(d).prependTo(f);
if(c.isFunction(b.beforeclose)&&!c.isFunction(b.beforeClose)){b.beforeClose=b.beforeclose;
}f.find("*").add(f).disableSelection();
b.draggable&&c.fn.draggable&&a._makeDraggable();
b.resizable&&c.fn.resizable&&a._makeResizable();
a._createButtons(b.buttons);
a._isOpen=false;
c.fn.bgiframe&&g.bgiframe();
},_init:function(){this.options.autoOpen&&this.open();
},destroy:function(){var a=this;
a.overlay&&a.overlay.destroy();
a.uiDialog.hide();
a.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body");
a.uiDialog.remove();
a.originalTitle&&a.element.attr("title",a.originalTitle);
return a;
},widget:function(){return this.uiDialog;
},close:function(a){var b=this,d,e;
if(false!==b._trigger("beforeClose",a)){b.overlay&&b.overlay.destroy();
b.uiDialog.unbind("keypress.ui-dialog");
b._isOpen=false;
if(b.options.hide){b.uiDialog.hide(b.options.hide,function(){b._trigger("close",a);
});
}else{b.uiDialog.hide();
b._trigger("close",a);
}c.ui.dialog.overlay.resize();
if(b.options.modal){d=0;
c(".ui-dialog").each(function(){if(this!==b.uiDialog[0]){e=c(this).css("z-index");
isNaN(e)||(d=Math.max(d,e));
}});
c.ui.dialog.maxZ=d;
}return b;
}},isOpen:function(){return this._isOpen;
},moveToTop:function(a,b){var d=this,e=d.options;
if(e.modal&&!a||!e.stack&&!e.modal){return d._trigger("focus",b);
}if(e.zIndex>c.ui.dialog.maxZ){c.ui.dialog.maxZ=e.zIndex;
}if(d.overlay){c.ui.dialog.maxZ+=1;
d.overlay.$el.css("z-index",c.ui.dialog.overlay.maxZ=c.ui.dialog.maxZ);
}a={scrollTop:d.element.scrollTop(),scrollLeft:d.element.scrollLeft()};
c.ui.dialog.maxZ+=1;
d.uiDialog.css("z-index",c.ui.dialog.maxZ);
d.element.attr(a);
d._trigger("focus",b);
return d;
},open:function(){if(!this._isOpen){var a=this,b=a.options,d=a.uiDialog;
a.overlay=b.modal?new c.ui.dialog.overlay(a):null;
a._size();
a._position(b.position);
d.show(b.show);
a.moveToTop(true);
b.modal&&d.bind("keypress.ui-dialog",function(e){if(e.keyCode===c.ui.keyCode.TAB){var g=c(":tabbable",this),f=g.filter(":first");
g=g.filter(":last");
if(e.target===g[0]&&!e.shiftKey){f.focus(1);
return false;
}else{if(e.target===f[0]&&e.shiftKey){g.focus(1);
return false;
}}}});
c(a.element.find(":tabbable").get().concat(d.find(".ui-dialog-buttonpane :tabbable").get().concat(d.get()))).eq(0).focus();
a._isOpen=true;
a._trigger("open");
return a;
}},_createButtons:function(a){var b=this,d=false,e=c("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),g=c("<div></div>").addClass("ui-dialog-buttonset").appendTo(e);
b.uiDialog.find(".ui-dialog-buttonpane").remove();
typeof a==="object"&&a!==null&&c.each(a,function(){return !(d=true);
});
if(d){c.each(a,function(f,h){h=c.isFunction(h)?{click:h,text:f}:h;
var i=c('<button type="button"></button>').click(function(){h.click.apply(b.element[0],arguments);
}).appendTo(g);
c.each(h,function(j,k){if(j!=="click"){j in o?i[j](k):i.attr(j,k);
}});
c.fn.button&&i.button();
});
e.appendTo(b.uiDialog);
}},_makeDraggable:function(){function a(f){return{position:f.position,offset:f.offset};
}var b=this,d=b.options,e=c(document),g;
b.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(f,h){g=d.height==="auto"?"auto":c(this).height();
c(this).height(c(this).height()).addClass("ui-dialog-dragging");
b._trigger("dragStart",f,a(h));
},drag:function(f,h){b._trigger("drag",f,a(h));
},stop:function(f,h){d.position=[h.position.left-e.scrollLeft(),h.position.top-e.scrollTop()];
c(this).removeClass("ui-dialog-dragging").height(g);
b._trigger("dragStop",f,a(h));
c.ui.dialog.overlay.resize();
}});
},_makeResizable:function(a){function b(f){return{originalPosition:f.originalPosition,originalSize:f.originalSize,position:f.position,size:f.size};
}a=a===l?this.options.resizable:a;
var d=this,e=d.options,g=d.uiDialog.css("position");
a=typeof a==="string"?a:"n,e,s,w,se,sw,ne,nw";
d.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:d.element,maxWidth:e.maxWidth,maxHeight:e.maxHeight,minWidth:e.minWidth,minHeight:d._minHeight(),handles:a,start:function(f,h){c(this).addClass("ui-dialog-resizing");
d._trigger("resizeStart",f,b(h));
},resize:function(f,h){d._trigger("resize",f,b(h));
},stop:function(f,h){c(this).removeClass("ui-dialog-resizing");
e.height=c(this).height();
e.width=c(this).width();
d._trigger("resizeStop",f,b(h));
c.ui.dialog.overlay.resize();
}}).css("position",g).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se");
},_minHeight:function(){var a=this.options;
return a.height==="auto"?a.minHeight:Math.min(a.minHeight,a.height);
},_position:function(a){var b=[],d=[0,0],e;
if(a){if(typeof a==="string"||typeof a==="object"&&"0" in a){b=a.split?a.split(" "):[a[0],a[1]];
if(b.length===1){b[1]=b[0];
}c.each(["left","top"],function(g,f){if(+b[g]===b[g]){d[g]=b[g];
b[g]=f;
}});
a={my:b.join(" "),at:b.join(" "),offset:d.join(" ")};
}a=c.extend({},c.ui.dialog.prototype.options.position,a);
}else{a=c.ui.dialog.prototype.options.position;
}(e=this.uiDialog.is(":visible"))||this.uiDialog.show();
this.uiDialog.css({top:0,left:0}).position(c.extend({of:window},a));
e||this.uiDialog.hide();
},_setOptions:function(a){var b=this,d={},e=false;
c.each(a,function(g,f){b._setOption(g,f);
if(g in m){e=true;
}if(g in n){d[g]=f;
}});
e&&this._size();
this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option",d);
},_setOption:function(a,b){var d=this,e=d.uiDialog;
switch(a){case"beforeclose":a="beforeClose";
break;
case"buttons":d._createButtons(b);
break;
case"closeText":d.uiDialogTitlebarCloseText.text(""+b);
break;
case"dialogClass":e.removeClass(d.options.dialogClass).addClass("ui-dialog ui-widget ui-widget-content ui-corner-all "+b);
break;
case"disabled":b?e.addClass("ui-dialog-disabled"):e.removeClass("ui-dialog-disabled");
break;
case"draggable":var g=e.is(":data(draggable)");
g&&!b&&e.draggable("destroy");
!g&&b&&d._makeDraggable();
break;
case"position":d._position(b);
break;
case"resizable":(g=e.is(":data(resizable)"))&&!b&&e.resizable("destroy");
g&&typeof b==="string"&&e.resizable("option","handles",b);
!g&&b!==false&&d._makeResizable(b);
break;
case"title":c(".ui-dialog-title",d.uiDialogTitlebar).html(""+(b||"&#160;"));
break;
}c.Widget.prototype._setOption.apply(d,arguments);
},_size:function(){var a=this.options,b,d,e=this.uiDialog.is(":visible");
this.element.show().css({width:"auto",minHeight:0,height:0});
if(a.minWidth>a.width){a.width=a.minWidth;
}b=this.uiDialog.css({height:"auto",width:a.width}).height();
d=Math.max(0,a.minHeight-b);
if(a.height==="auto"){if(c.support.minHeight){this.element.css({minHeight:d,height:"auto"});
}else{this.uiDialog.show();
a=this.element.css("height","auto").height();
e||this.uiDialog.hide();
this.element.height(Math.max(a,d));
}}else{this.element.height(Math.max(a.height-b,0));
}this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight());
}});
c.extend(c.ui.dialog,{version:"1.8.16",uuid:0,maxZ:0,getTitleId:function(a){a=a.attr("id");
if(!a){this.uuid+=1;
a=this.uuid;
}return"ui-dialog-title-"+a;
},overlay:function(a){this.$el=c.ui.dialog.overlay.create(a);
}});
c.extend(c.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:c.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function(a){return a+".dialog-overlay";
}).join(" "),create:function(a){if(this.instances.length===0){setTimeout(function(){c.ui.dialog.overlay.instances.length&&c(document).bind(c.ui.dialog.overlay.events,function(d){if(c(d.target).zIndex()<c.ui.dialog.overlay.maxZ){return false;
}});
},1);
c(document).bind("keydown.dialog-overlay",function(d){if(a.options.closeOnEscape&&!d.isDefaultPrevented()&&d.keyCode&&d.keyCode===c.ui.keyCode.ESCAPE){a.close(d);
d.preventDefault();
}});
c(window).bind("resize.dialog-overlay",c.ui.dialog.overlay.resize);
}var b=(this.oldInstances.pop()||c("<div></div>").addClass("ui-widget-overlay")).appendTo(document.body).css({width:this.width(),height:this.height()});
c.fn.bgiframe&&b.bgiframe();
this.instances.push(b);
return b;
},destroy:function(a){var b=c.inArray(a,this.instances);
b!=-1&&this.oldInstances.push(this.instances.splice(b,1)[0]);
this.instances.length===0&&c([document,window]).unbind(".dialog-overlay");
a.remove();
var d=0;
c.each(this.instances,function(){d=Math.max(d,this.css("z-index"));
});
this.maxZ=d;
},height:function(){var a,b;
if(c.browser.msie&&c.browser.version<7){a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight);
b=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight);
return a<b?c(window).height()+"px":a+"px";
}else{return c(document).height()+"px";
}},width:function(){var a,b;
if(c.browser.msie){a=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth);
b=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth);
return a<b?c(window).width()+"px":a+"px";
}else{return c(document).width()+"px";
}},resize:function(){var a=c([]);
c.each(c.ui.dialog.overlay.instances,function(){a=a.add(this);
});
a.css({width:0,height:0}).css({width:c.ui.dialog.overlay.width(),height:c.ui.dialog.overlay.height()});
}});
c.extend(c.ui.dialog.overlay.prototype,{destroy:function(){c.ui.dialog.overlay.destroy(this.$el);
}});
})(jQuery);


/* list-field.js */
Exhibit.DataEdit.Editor.ListField=function(jq,iid,pid,val,noLens){this._jqThis=jq;
this._itemId=iid;
this._propId=pid;
this._value=val;
this._divId="__DATAEDITOR__"+this._propId+"_"+Exhibit.DataEdit.Editor._getUID();
this._validators=$(jq).attr("ex:validators");
this._disabledFor=Exhibit.DataEdit.Editor._parseDisabledFor($(jq).attr("ex:disableFor"));
this._noEditorLens=noLens;
this._matchDisplayLens=Exhibit.DataEdit.Editor._parseTrueFalse($(jq).attr("ex:useDisplayStyle"));
this._saveOnChange=false;
this._options=[];
this._allowNew=Exhibit.DataEdit.Editor._parseTrueFalse($(jq).attr("ex:allowNew"),true);
var self=this;
$("option",this._jqThis).each(function(idx){self._options.push($(this).attr("value"));
});
if(this._options.length==0){var type=database.getObject(this._itemId,"type");
this._options=Exhibit.DataEdit.Editor._uniqueObjects(type,this._propId);
}if(this._value==undefined){this._value=[];
}if(typeof (this._value)=="string"){this._value=[this._value];
}if(!(this._value instanceof Array)){throw"Invalid data for ListField";
}};
Exhibit.DataEdit.Editor.ListField.prototype.getHTML=function(onShow){var self=this;
onShow.push(function(){var split=function(val){return val.split(/,\s*/);
};
var extractLast=function(term){return split(term).pop();
};
var ip=$("#"+self._divId);
ip.bind("keydown",function(ev){if(ev.keyCode===$.ui.keyCode.TAB&&$(this).data("autocomplete").menu.active){ev.preventDefault();
}});
ip.bind("blur",function(ev){self.setValue(self.getValue());
});
ip.autocomplete({minLength:0,source:function(request,response){response($.ui.autocomplete.filter(self._options,extractLast(request.term)));
},focus:function(){return false;
},select:function(ev,ui){var terms=split(this.value);
terms.pop();
terms.push(ui.item.value);
terms.push("");
this.value=terms.join(",");
return false;
}});
if(this._saveOnChange){ip.bind("change",function(ev){Exhibit.DataEdit.onChange(self._itemId,self._propId);
});
}});
var style=null;
if(this._noEditorLens||this._matchDisplayLens){style=Exhibit.DataEdit.Editor._extractStyle(this._jqThis)+"border-width: 0px; width: "+$(this._jqThis).width()+"px; height: "+$(this._jqThis).height()+"px; ";
}var l="";
for(var i=0;
i<this._value.length;
i++){l=l+((l.length)?",":"")+this._value[i];
}var tag=Exhibit.DataEdit.Editor._htmlTag("input",{"id":this._divId,"style":style,"class":"exhibitDataEditListField","value":l},$(this._jqThis).get()[0],true);
return tag;
};
Exhibit.DataEdit.Editor.ListField.prototype.getValue=function(){var els=$("#"+this._divId).get();
var val=((els.length)?els[0].value:"");
var vals=val.split(/,\s*/);
var ret=[];
for(var i=0;
i<vals.length;
i++){var mt=vals[i].match(/^ *(.*) *$/);
var word=mt[1];
if(word.length>0){var z=Exhibit.DataEdit.Editor.matchExactStringFromList(word,this._options);
if(z!=null){ret.push(z);
}else{if(this._allowNew){ret.push(word);
}else{z=Exhibit.DataEdit.Editor.matchClosestStringFromList(word,this._options);
if(z){ret.push(z);
}}}}}return ret;
};
Exhibit.DataEdit.Editor.ListField.prototype.setValue=function(v){var els=$("#"+this._divId).get();
if(els.length){els[0].value=v.join(",");
}};
Exhibit.DataEdit.Editor.ListField.prototype.setError=function(b){$("#"+this._divId).css("background-color",b?Exhibit.DataEdit.Editor._ERRCOL_:Exhibit.DataEdit.Editor._BGCOL_);
};
Exhibit.DataEdit.Editor.ListField.domFilter=function(jqThis,f){$("select",jqThis).filter(function(idx){return $(this).attr("ex:type")=="list";
}).each(f);
};


/* number-field.js */
Exhibit.DataEdit.Editor.NumberField=function(jq,iid,pid,val,noLens){this._jqThis=jq;
this._itemId=iid;
this._propId=pid;
this._value=val;
this._divId="__DATAEDITOR__"+this._propId+"_"+Exhibit.DataEdit.Editor._getUID();
this._validators=$(jq).attr("ex:validators");
this._disabledFor=Exhibit.DataEdit.Editor._parseDisabledFor($(jq).attr("ex:disableFor"));
this._noEditorLens=noLens;
this._matchDisplayLens=Exhibit.DataEdit.Editor._parseTrueFalse($(jq).attr("ex:useDisplayStyle"));
this._saveOnChange=false;
this._formatDigits=parseInt($(jq).attr("ex:formatDigits"));
if(this._noEditorLens&&(typeof this._value=="string")){var v=this._value;
if(v.charAt(0)=="-"){v=v.substring(1);
}if(v.charAt(0)=="0"){v=v.match(/^(\d*)/)[1];
this._formatDigits=v.length;
}}if(this._value==undefined){this._value="0";
}else{if(typeof this._value=="number"){this._value=parseInt(this._value);
}else{if((typeof this._value!="string")||(!this._value.match(/^-?[0-9]*$/))){throw"Invalid data for NumberField";
}}}};
Exhibit.DataEdit.Editor.NumberField.prototype.getHTML=function(onShow){var style=null;
if(this._noEditorLens||this._matchDisplayLens){style=Exhibit.DataEdit.Editor._extractStyle(this._jqThis)+"border-width: 0px; width: "+$(this._jqThis).width()+"px; height: "+$(this._jqThis).height()+"px; ";
}var onChange=(this._saveOnChange)?"Exhibit.DataEdit.onChange('"+this._itemId+"','"+this._propId+"')":"";
var tag=Exhibit.DataEdit.Editor._htmlTag("input",{"id":this._divId,"style":style,"class":"exhibitDataEditNumberField","type":"Text","value":this._format(this._value),"onchange":onChange},$(this._jqThis).get()[0],true);
return tag;
};
Exhibit.DataEdit.Editor.NumberField.prototype.getValue=function(){var els=$("#"+this._divId).get();
if(els.length&&(els[0].value!="")){return(!this._formatDigits)?els[0].value:this._format(els[0].value+"");
}else{return undefined;
}};
Exhibit.DataEdit.Editor.NumberField.prototype.setValue=function(v){var els=$("#"+this._divId).get();
if(els.length){els[0].value=v+"";
}};
Exhibit.DataEdit.Editor.NumberField.prototype.setError=function(b){$("#"+this._divId).css("background-color",b?Exhibit.DataEdit.Editor._ERRCOL_:Exhibit.DataEdit.Editor._BGCOL_);
};
Exhibit.DataEdit.Editor.NumberField.prototype._format=function(v){v=v+"";
var neg=false;
if(v.charAt(0)=="-"){neg=true;
v=v.substring(1);
}while(v.length<this._formatDigits){v="0"+v;
}if(neg){v="-"+v;
}return v;
};
Exhibit.DataEdit.Editor.NumberField.domFilter=function(jqThis,f){$("input",jqThis).filter(function(idx){return $(this).attr("ex:type")=="number";
}).each(f);
};


/* text-field.js */
Exhibit.DataEdit.Editor.TextField=function(jq,iid,pid,val,noLens){this._jqThis=jq;
this._itemId=iid;
this._propId=pid;
this._value=val;
this._divId="__DATAEDITOR__"+this._propId+"_"+Exhibit.DataEdit.Editor._getUID();
this._validators=$(jq).attr("ex:validators");
this._disabledFor=Exhibit.DataEdit.Editor._parseDisabledFor($(jq).attr("ex:disableFor"));
this._noEditorLens=noLens;
this._matchDisplayLens=Exhibit.DataEdit.Editor._parseTrueFalse($(jq).attr("ex:useDisplayStyle"));
this._saveOnChange=false;
this._prefDimensions=null;
this._largeText=Exhibit.DataEdit.Editor._parseTrueFalse($(jq).attr("ex:large"));
this._rows=parseInt($(jq).attr("ex:rows"));
this._cols=parseInt($(jq).attr("ex:cols"));
if(this._value==undefined){this._value="";
}if((typeof this._value)!="string"){throw"Invalid data for TextField";
}};
Exhibit.DataEdit.Editor.TextField.prototype.getHTML=function(onShow){var textDim=Exhibit.DataEdit.Editor._getColRowDimensions(this._jqThis,1,1);
this._prefDimensions={width:textDim.width*10,height:textDim.height*1};
var style=null;
if(this._noEditorLens||this._matchDisplayLens){style=Exhibit.DataEdit.Editor._extractStyle(this._jqThis)+"border-width: 0px;  border-style: None; padding: 0px; width: "+$(this._jqThis).width()+"px; height: "+$(this._jqThis).height()+"px; ";
var contH=$(this._jqThis).height();
this._largeText=((contH/textDim.height)>=2);
}var onChange=(this._saveOnChange)?"Exhibit.DataEdit.onChange('"+this._itemId+"','"+this._propId+"')":"";
if(this._largeText){var c=this._cols?this._cols:null;
var r=this._rows?this._rows:null;
var tag=Exhibit.DataEdit.Editor._htmlTag("textarea",{"id":this._divId,"style":style,"class":"exhibitDataEditTextAreaField","rows":r,"cols":c,"onchange":onChange},$(this._jqThis).get()[0],false);
return tag+this._value+"</textarea>";
}else{var tag=Exhibit.DataEdit.Editor._htmlTag("input",{"id":this._divId,"style":style,"class":"exhibitDataEditTextField","type":"Text","value":this._value,"onchange":onChange},$(this._jqThis).get()[0],true);
return tag;
}};
Exhibit.DataEdit.Editor.TextField.prototype.getValue=function(){var els=$("#"+this._divId).get();
if(els.length){return(els[0].value!="")?els[0].value:undefined;
}else{return undefined;
}};
Exhibit.DataEdit.Editor.TextField.prototype.setValue=function(v){var els=$("#"+this._divId).get();
if(els.length){els[0].value=v;
}};
Exhibit.DataEdit.Editor.TextField.prototype.setError=function(b){$("#"+this._divId).css("background-color",b?Exhibit.DataEdit.Editor._ERRCOL_:Exhibit.DataEdit.Editor._BGCOL_);
};
Exhibit.DataEdit.Editor.TextField.domFilter=function(jqThis,f){$("input",jqThis).filter(function(idx){return $(this).attr("ex:type")=="text";
}).each(f);
};


/* ticklist-field.js */
Exhibit.DataEdit.Editor.TickListField=function(jq,iid,pid,val,noLens){this._jqThis=jq;
this._itemId=iid;
this._propId=pid;
this._value=val;
this._divId="__DATAEDITOR__"+this._propId+"_"+Exhibit.DataEdit.Editor._getUID();
this._validators=$(jq).attr("ex:validators");
this._disabledFor=Exhibit.DataEdit.Editor._parseDisabledFor($(jq).attr("ex:disableFor"));
this._noEditorLens=noLens;
this._matchDisplayLens=Exhibit.DataEdit.Editor._parseTrueFalse($(jq).attr("ex:useDisplayStyle"));
this._saveOnChange=false;
this._options=[];
this._allowNew=Exhibit.DataEdit.Editor._parseTrueFalse($(jq).attr("ex:allowNew"),true);
this._width=parseInt($(jq).attr("ex:width"));
this._height=parseInt($(jq).attr("ex:height"));
if(this._value==undefined){this._value=[];
}if(typeof (this._value)=="string"){this._value=[this._value];
}if(!(this._value instanceof Array)){throw"Invalid data for TickListField";
}var self=this;
$("option",this._jqThis).each(function(idx){self._options.push($(this).attr("value"));
});
if(this._options.length==0){var type=database.getObject(this._itemId,"type");
this._options=Exhibit.DataEdit.Editor._uniqueObjects(type,this._propId);
}for(var i=0;
i<this._value.length;
i++){if(this._options.indexOf(this._value[i])===-1){this._options.push(this._value[i]);
}}};
Exhibit.DataEdit.Editor.TickListField.prototype.getHTML=function(onShow){var self=this;
var html='<div class="exhibitDataEditTickListField">';
var w=(this._width)?this._width:"20em";
var h=(this._height)?this._height:"10em";
html=html+'<div id="'+this._divId+'" style="overflow:Scroll; width:'+w+"; height:"+h+';">';
for(var i=0;
i<this._options.length;
i++){var ch=(this._value.indexOf(this._options[i])>=0)?' checked="checked"':"";
html=html+'<div><input type="checkbox" name="_TICKLIST_'+this._itemId+'" value="'+this._options[i]+'"'+ch+" />"+this._options[i]+"</div>";
}html=html+"</div>";
if(this._allowNew){html=html+'<input id="_TICKLIST_TF_'+this._itemId+'" type="textfield" xstyle="width:'+w+';" /><a href="javascript:Exhibit.DataEdit.Editor.TickListField._add(\''+this._divId+"','_TICKLIST_TF_"+this._itemId+"','"+this._itemId+"')\">Add</a>";
}html=html+"</div>";
return html;
};
Exhibit.DataEdit.Editor.TickListField._add=function(divId,txDivId,itemId){var tf=$("#"+txDivId).get()[0];
if(tf){var val=tf.value;
if(val.length==0){return ;
}var cnt=0;
var val2=val.toLowerCase();
var a1="#"+divId;
var a2='input[name="_TICKLIST_'+itemId+'"]';
$(a1+" "+a2).each(function(idx){var c=$(this).get()[0];
if(c.value.toLowerCase()===val2){c.checked=true;
cnt++;
}});
if(cnt==0){$("#"+divId).append('<div><input type="checkbox" name="_TICKLIST_'+itemId+'" value="'+val+'" checked="checked" />'+val+"</div>");
}}};
Exhibit.DataEdit.Editor.TickListField.prototype.getValue=function(){var ret=[];
var a1="#"+this._divId;
var a2='input[name="_TICKLIST_'+this._itemId+'"]';
var els=$(a1+" "+a2).each(function(idx){var c=$(this).get()[0];
if(c.checked){ret.push(c.value);
}});
return ret;
};
Exhibit.DataEdit.Editor.TickListField.prototype.setValue=function(v){var els=$("#"+this._divId+' input[name="_TICKLIST_'+this._itemId+'"]').each(function(idx){var c=$(this).get()[0];
c.checked=(v.indexOf(c.value));
});
};
Exhibit.DataEdit.Editor.TickListField.prototype.setError=function(b){$("#"+this._divId).css("background-color",b?Exhibit.DataEdit.Editor._ERRCOL_:Exhibit.DataEdit.Editor._BGCOL_);
};
Exhibit.DataEdit.Editor.TickListField.domFilter=function(jqThis,f){$("select",jqThis).filter(function(idx){return $(this).attr("ex:type")=="ticklist";
}).each(f);
};
